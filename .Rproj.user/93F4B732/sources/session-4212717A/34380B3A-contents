#' @title Plot rsRNA mapping comparision coverage profile
#'
#' @description
#'  Plot the coverage profile of the rsRNA, Solid curves presenting average RPM of 2 groups(treat VS control) or 3 groups(high VS control; low VS control). RPM, reads per million; nt, nucleotide. Colored band stood for 95% CI.
#'
#' @param pattern  A uniform suffix for the filename results returned by the function of prepare_tsRNA_mapping_plotdata.
#' @param Tsamples A collection of treat group file name prefixes, generally after removing "_mappingplot.txt".
#' @param Hsamples A collection of high group file name prefixes, generally after removing "_mappingplot.txt".
#' @param Lsamples A collection of low group file name prefixes, generally after removing "_mappingplot.txt".
#' @param Nsamples A collection of control group file name prefixes, generally after removing "_mappingplot.txt".
#' @param colors The color of the line in the line chart.
#' @param suffix A format suffix for a graph file.
#'
#' @return the coverage profile of the tsRNA and form a new file "specific tsRNA".pdf.
#' @export
#'
#' @examples
#' 2 group : treat VS control
#' rsRNAmapping(Tsamples=c("XWH5_S7_L004", "XWH4_S6_L004", "XWH1_S0_L000", "XWH2_S6_L003"),
#' Nsamples=c("XWN1_S1_L004", "XWN2_S2_L004", "XWN3_S5_L003")
#'
#' 3 group : high VS control; low VS control
#' rsRNAmapping(Hsamples=c("XWH5_S7_L004", "XWH4_S6_L004", "XWH1_S0_L000", "XWH2_S6_L003"),
#' Lsamples=c("XWH3_S5_L004",  "XWL4_S11_L004", "XWL1_S8_L004",  "XWL3_S0_L000",  "XWL2_S9_L004",  "XWL5_S1_L001" ),
#' Nsamples=c("XWN1_S1_L004", "XWN2_S2_L004", "XWN3_S5_L003"))
#'
#'
#'
rsRNAmapping<- function(Tsamples= FALSE,
                        Hsamples= FALSE,
                        Lsamples= FALSE,
                        Nsamples,
                        rsRNAName = "28S",
                        rsRNAFilePrefixJunctionSymbol = '_',
                        rsRNAFileSuffix = '_rRNA_mapping_revised.txt',
                        colors = c("#00AFBB","#FC4E07","#E7B800"),
                        suffix='.pdf'){
  
  library(reshape2)
  library(ggplot2)
  library(ggpubr)
  library(wrMisc)
  
  data=NULL
  for(i in list.files(".",rsRNAName)){
    rsRNANamePaste <- paste(rsRNAFilePrefixJunctionSymbol, rsRNAName, rsRNAFileSuffix, sep = '')
    s=gsub(rsRNANamePaste,"",i)
    d=read.table(i,header=TRUE,sep="\t")
    d$sample=s
    data=rbind(data,d)
    print(length(d$length))
  }
  
  d1=dcast(data,sample~length,value.var="RPM")
  
  rownames(d1)=d1$sample
  
  d1a=d1[,-1]
  
  re.data=as.data.frame(t(d1a))
  
  #specifc a specific region
  region_start=135-20  #重要变量
  region_end=135+19+20  #重要变量
  # region_start=1 #重要变量
  # region_end=ncol(d1a)  #重要变量
  
  re.data=re.data[as.character(region_start:region_end),]
  
  if( Tsamples != FALSE ){
    Tsamples=Tsamples
    Nsamples=Nsamples
    # hsem=rowSEMs(re.data[,Hsamples])
    # lsem=rowSEMs(re.data[,Lsamples])
    tsem=rowSEMs(re.data[,Tsamples])
    nsem=rowSEMs(re.data[,Nsamples])
    
    tmean=rowMeans(re.data[,Tsamples])
    # lmean=rowMeans(re.data[,Lsamples])
    nmean=rowMeans(re.data[,Nsamples])
    
    # re.data=data.frame(length=rownames(re.data),tmean=tmean,lmean=lmean,nmean=nmean)
    re.data=data.frame(length=rownames(re.data),tmean=tmean,nmean=nmean)
    
    dp=melt(re.data, id.vars = "length")  # 宽数据变长数据，id.vars：选择用来做主键的列
    
    # dp$sem=c(hsem,lsem,nsem)
    dp$sem=c(tsem,nsem)
    dp$low=dp$value-dp$sem
    dp$high=dp$value+dp$sem
    
    dp$variable=factor(dp$variable,levels=c("tmean","nmean")) # "nmean",
  }  else {
    Hsamples=Hsamples
    Lsamples=Lsamples
    Nsamples=Nsamples
    
  }
  p=ggplot(dp, aes(x = length, y = value, color=variable,group=variable))+
    geom_line(size=1)+theme_pubr()+
    geom_ribbon(aes(ymin = low, ymax = high,fill=variable), alpha = 0.1,colour = NA)+
    scale_color_manual(values = colors)+
    scale_fill_manual(values = colors)+
    ylab("Coverage(RPM)")+xlab("Length of nucleotides")+labs(color="group")+labs(fill="group")+
    scale_x_discrete(breaks = seq(min(dp$length), max(dp$length), by = 10 ))  # by =10  (region_end-region_start+1)/6
  
  # ggsave(paste(rsRNAName, '_rRNA_mapping',suffix, sep = ''), p, width=6, height=4)
  p
}
